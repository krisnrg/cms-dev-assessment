{"ast":null,"code":"var _jsxFileName = \"/Users/kristiangonzalez/webdev/comp2/src/App.js\";\nimport React, { isValidElement } from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      stories: [],\n      listings: [],\n      events: [],\n      offers: []\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    const fetchData = async getData => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}`);\n      let data = await response.json();\n      return data;\n    };\n\n    const urls = [\"listings\", \"events\", \"offers\"];\n    urls.map(url => {\n      fetchData(url).then(data => {\n        console.log(data.data);\n        this.setState({\n          stories: data.data,\n          [url]: data.data\n        });\n      });\n    }); // fetchData(\"events\").then( data => {\n    //   console.log(data.data);\n    //   this.setState({\n    //     events: data.data,\n    //   })\n    // })\n    // fetchData(\"offers\").then( data => {\n    //   console.log(data.data);\n    //   this.setState({\n    //     offers: data.data,\n    //   })\n    // })\n  }\n\n  handleUpdate(update, e) {\n    this.setState(state => ({\n      stories: update\n    }));\n  }\n\n  render() {\n    const {\n      stories,\n      listings,\n      events,\n      offers\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"selected\",\n      onClick: this.handleUpdate.bind(this, [...listings, ...events, ...offers]),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      onClick: this.handleUpdate.bind(this, listings),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Listings\"), React.createElement(\"button\", {\n      onClick: this.handleUpdate.bind(this, events),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Events\"), React.createElement(\"button\", {\n      onClick: this.handleUpdate.bind(this, offers),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Offers\")), React.createElement(\"div\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, stories.map((story, idx) => React.createElement(Story, {\n      key: idx,\n      title: story.title,\n      story: story.description,\n      url: story.mediaurl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristiangonzalez/webdev/comp2/src/App.js"],"names":["React","isValidElement","Story","App","Component","constructor","props","state","error","isLoaded","stories","listings","events","offers","handleUpdate","bind","componentDidMount","fetchData","getData","response","fetch","data","json","urls","map","url","then","console","log","setState","update","e","render","story","idx","title","description","mediaurl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,cAAhB,QAAsC,OAAtC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,OAAO,EAAE,EAHE;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,MAAM,EAAE,EALG;AAMXC,MAAAA,MAAM,EAAE;AANG,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,SAAS,GAAG,MAAOC,OAAP,IAAmB;AACnC,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BF,OAAQ,EAAzC,CAA1B;AACA,UAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,aAAOD,IAAP;AACD,KAJD;;AAKA,UAAME,IAAI,GAAG,CACX,UADW,EAEX,QAFW,EAGX,QAHW,CAAb;AAKAA,IAAAA,IAAI,CAACC,GAAL,CAAUC,GAAD,IAAS;AAChBR,MAAAA,SAAS,CAACQ,GAAD,CAAT,CAAeC,IAAf,CAAqBL,IAAI,IAAI;AAC3BM,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACA,IAAjB;AACA,aAAKQ,QAAL,CAAc;AACZnB,UAAAA,OAAO,EAAEW,IAAI,CAACA,IADF;AAEZ,WAACI,GAAD,GAAOJ,IAAI,CAACA;AAFA,SAAd;AAID,OAND;AAOD,KARD,EAXkB,CAqBlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;AACDP,EAAAA,YAAY,CAACgB,MAAD,EAASC,CAAT,EAAW;AACrB,SAAKF,QAAL,CAActB,KAAK,KAAK;AACtBG,MAAAA,OAAO,EAAEoB;AADa,KAAL,CAAnB;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEtB,MAAAA,OAAF;AAAUC,MAAAA,QAAV;AAAoBC,MAAAA,MAApB;AAA4BC,MAAAA;AAA5B,QAAuC,KAAKN,KAAlD;AACA,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,UAAlB;AAA6B,MAAA,OAAO,EAAE,KAAKO,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6B,CAAC,GAAGJ,QAAJ,EAAc,GAAGC,MAAjB,EAAyB,GAAGC,MAA5B,CAA7B,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6BJ,QAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKG,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6BH,MAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKE,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,EAA6BF,MAA7B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF,EAOA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACc,GAAR,CAAY,CAACS,KAAD,EAAQC,GAAR,KACX,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,GAAZ;AAAiB,MAAA,KAAK,EAAED,KAAK,CAACE,KAA9B;AAAqC,MAAA,KAAK,EAAEF,KAAK,CAACG,WAAlD;AAA+D,MAAA,GAAG,EAAEH,KAAK,CAACI,QAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CAPA,CADF;AAcE;;AAxE4B;;AA2ElC,eAAelC,GAAf","sourcesContent":["import React, { isValidElement } from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      error: null,\n      isLoaded: false,\n      stories: [],\n      listings: [],\n      events: [],\n      offers: []\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n  \n  componentDidMount() {\n    const fetchData = async (getData) => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}`);\n      let data = await response.json();\n      return data;\n    }\n    const urls = [\n      \"listings\",\n      \"events\",\n      \"offers\"\n    ]\n    urls.map((url) => {\n      fetchData(url).then( data => {\n        console.log(data.data);\n        this.setState({\n          stories: data.data,\n          [url]: data.data\n        })\n      })\n    })\n    \n    // fetchData(\"events\").then( data => {\n    //   console.log(data.data);\n    //   this.setState({\n    //     events: data.data,\n    //   })\n    // })\n    // fetchData(\"offers\").then( data => {\n    //   console.log(data.data);\n    //   this.setState({\n    //     offers: data.data,\n    //   })\n    // })\n    \n  }\n  handleUpdate(update, e){\n    this.setState(state => ({\n      stories: update\n    }));\n  }\n\n  render() {\n    const { stories,listings, events, offers } = this.state;\n    return(\n      <div className=\"wrapper\">\n        <nav className=\"menu\">\n          <button className=\"selected\" onClick={this.handleUpdate.bind(this, [...listings, ...events, ...offers])}>All</button>\n          <button onClick={this.handleUpdate.bind(this, listings)}>Listings</button>\n          <button onClick={this.handleUpdate.bind(this, events)}>Events</button>\n          <button onClick={this.handleUpdate.bind(this, offers)}>Offers</button>\n        </nav>\n      <div className=\"grid\">\n        {stories.map((story, idx) => (\n          <Story key={idx} title={story.title} story={story.description} url={story.mediaurl}/>\n        ))}\n      </div>\n    </div>\n    )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}