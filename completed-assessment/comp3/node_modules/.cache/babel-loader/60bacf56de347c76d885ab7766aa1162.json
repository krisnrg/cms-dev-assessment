{"ast":null,"code":"var _jsxFileName = \"/Users/kristiangonzalez/webdev/comp3/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      stories: [],\n      currentItemIdx: 1,\n      currentLayout: 1,\n      totalStories: 16,\n      layouts: {\n        1: 5,\n        2: 5,\n        3: 3,\n        4: 2\n      }\n    };\n  }\n\n  componentDidMount() {\n    // Function to fetch data from API\n    const fetchData = async getData => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}/?per_page=${this.state.totalStories}`);\n      let data = await response.json();\n      return data;\n    }; // Different urls to fetch\n\n\n    const urls = [\"listings\"]; // Map over them and load them to the state\n\n    urls.forEach(url => {\n      fetchData(url).then(data => {\n        console.log(data.data);\n        this.setState(state => ({\n          // append all the urls to stories so that all datas shows initially\n          stories: [...state.stories, ...data.data],\n          // put them in their own variables individually so we can swap between them\n          [url]: data.data\n        }));\n      });\n    });\n  }\n\n  handleStoriesNext(e) {\n    e.preventDefault();\n    const {\n      currentLayout,\n      layouts\n    } = this.state; // go to the next layout\n\n    if (currentLayout === Object.keys(layouts).length) {\n      this.setState({\n        currentItemIdx: 1,\n        currentLayout: 1\n      });\n    } else {\n      this.setState(state => ({\n        currentItemIdx: state.currentItemIdx + state.layouts[state.currentLayout],\n        currentLayout: state.currentLayout + 1\n      }));\n    }\n  }\n\n  handleStoriesPrev(e) {\n    e.preventDefault();\n    const {\n      currentLayout\n    } = this.state; // go to the prev layout\n\n    if (currentLayout === 1) {\n      this.setState(state => ({\n        currentItemIdx: state.totalStories - state.layouts[4],\n        currentLayout: 4\n      }));\n    } else {\n      this.setState(state => ({\n        currentItemIdx: state.currentItemIdx - state.layouts[state.currentLayout - 1],\n        currentLayout: state.currentLayout - 1\n      }));\n    }\n  }\n\n  render() {\n    const {\n      stories,\n      currentItemIdx,\n      currentLayout,\n      layouts\n    } = this.state;\n    let nidx = currentItemIdx - 1;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: `grid layout${currentLayout}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, stories.filter((elem, idx) => idx >= currentItemIdx && idx < currentItemIdx + layouts[currentLayout]).map((story, idx) => {\n      const output = React.createElement(Story, {\n        key: idx,\n        title: story.title,\n        story: story.description,\n        url: story.mediaurl,\n        idx: nidx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      });\n      nidx = nidx + 1;\n      return output;\n    })), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"prev\",\n      onClick: this.handleStoriesPrev.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Prev.\"), React.createElement(\"a\", {\n      href: \"next\",\n      onClick: this.handleStoriesNext.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristiangonzalez/webdev/comp3/src/App.js"],"names":["React","Story","App","Component","constructor","props","state","error","stories","currentItemIdx","currentLayout","totalStories","layouts","componentDidMount","fetchData","getData","response","fetch","data","json","urls","forEach","url","then","console","log","setState","handleStoriesNext","e","preventDefault","Object","keys","length","handleStoriesPrev","render","nidx","filter","elem","idx","map","story","output","title","description","mediaurl","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      stories: [],\n      currentItemIdx: 1,\n      currentLayout: 1,\n      totalStories: 16,\n      layouts: {\n        1 : 5,\n        2 : 5,\n        3 : 3,\n        4 : 2,\n      }\n    };\n  }\n  \n  componentDidMount() {\n    // Function to fetch data from API\n    const fetchData = async (getData) => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}/?per_page=${this.state.totalStories}`);\n      let data = await response.json();\n      return data;\n    }\n    // Different urls to fetch\n    const urls = [ \"listings\"]\n    \n    // Map over them and load them to the state\n    urls.forEach((url) => {\n      fetchData(url).then( data => {\n        console.log(data.data);\n        this.setState(state => ({\n          // append all the urls to stories so that all datas shows initially\n          stories: [...state.stories, ...data.data],\n          // put them in their own variables individually so we can swap between them\n          [url]: data.data\n        }))\n      })\n    })\n  }\n\n  handleStoriesNext(e){\n    e.preventDefault();\n    const { currentLayout, layouts } = this.state\n    // go to the next layout\n    if (currentLayout === Object.keys(layouts).length){\n      this.setState({\n        currentItemIdx: 1,\n        currentLayout: 1\n      })\n    } else {\n      this.setState(state => ({\n        currentItemIdx: state.currentItemIdx + state.layouts[state.currentLayout],\n        currentLayout: state.currentLayout + 1\n      }));\n    }\n  }\n  handleStoriesPrev(e){\n    e.preventDefault();\n    const { currentLayout} = this.state\n    // go to the prev layout\n    if (currentLayout === 1){\n      this.setState(state => ({\n        currentItemIdx: state.totalStories - state.layouts[4],\n        currentLayout: 4\n      }))\n    } else {\n      this.setState(state => ({\n        currentItemIdx: state.currentItemIdx - state.layouts[state.currentLayout - 1],\n        currentLayout: state.currentLayout - 1\n      }));\n    }\n  }\n\n\n  render() {\n    const { stories, currentItemIdx, currentLayout, layouts } = this.state;\n    let nidx = currentItemIdx - 1;\n    return(\n      <div className=\"wrapper\">\n        <div className={`grid layout${currentLayout}`}>\n          { stories.filter((elem, idx) => idx >= currentItemIdx && idx < currentItemIdx + layouts[currentLayout] )\n            .map((story, idx) => {\n              const output = <Story key={idx} title={story.title} story={story.description} url={story.mediaurl} idx={nidx}/>\n              nidx = nidx + 1\n              return output;\n            })}\n        </div>\n        <nav>\n          <div className=\"controls\">\n            <a href=\"prev\" onClick={this.handleStoriesPrev.bind(this)}>Prev.</a>\n            <a href=\"next\" onClick={this.handleStoriesNext.bind(this)}>Next</a>\n          </div>\n        </nav>\n    </div>\n    )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}