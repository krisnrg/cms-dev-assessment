{"ast":null,"code":"var _jsxFileName = \"/Users/kristiangonzalez/webdev/comp3/src/App.js\";\nimport React, { isValidElement } from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      stories: [],\n      listings: [],\n      events: [],\n      offers: [],\n      currentItemIdx: 1,\n      currentLayout: 1,\n      layouts: {\n        1: 5,\n        2: 5,\n        3: 3,\n        4: 2\n      }\n    };\n\n    Array.prototype.next = function () {\n      return this[++this.current];\n    };\n\n    Array.prototype.prev = function () {\n      return this[--this.current];\n    };\n\n    Array.prototype.current = 0;\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    // Function to fetch data from API\n    const fetchData = async getData => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}/?per_page=15`);\n      let data = await response.json();\n      return data;\n    }; // Different urls to fetch\n\n\n    const urls = [\"listings\"]; // Map over them and load them to the state\n\n    urls.map(url => {\n      fetchData(url).then(data => {\n        console.log(data.data);\n        this.setState(state => ({\n          // append all the urls to stories so that all datas shows initially\n          stories: [...state.stories, ...data.data],\n          // put them in their own variables individually so we can swap between them\n          [url]: data.data\n        }));\n      });\n    });\n  }\n\n  handleUpdate(update, e) {\n    this.setState(state => ({\n      stories: update\n    }));\n  }\n\n  handleStories() {\n    const {\n      currentItemIdx,\n      currentLayout,\n      layouts\n    } = this.state; // go to the next layout\n\n    if (currentLayout === Object.keys(layouts).length) {\n      this.setState({\n        currentLayout: 1\n      });\n    } else {\n      this.setState(state => ({\n        currentLayout: state.currentLayout\n      }));\n    }\n  }\n\n  render() {\n    const {\n      stories,\n      listings,\n      events,\n      offers\n    } = this.state;\n    const {\n      currentItemIdx,\n      currentLayout,\n      layouts\n    } = this.state;\n    let filteredStories = stories.filter((elem, idx) => {\n      if (idx < 5) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid layout2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, filteredStories.map((story, idx) => {\n      return React.createElement(Story, {\n        key: idx,\n        title: story.title,\n        story: story.description,\n        url: story.mediaurl,\n        idx: idx,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    })), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"controls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"\",\n      onClick: \"handleStories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Prev.\"), React.createElement(\"a\", {\n      href: \"\",\n      onClick: \"handleStories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Next\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kristiangonzalez/webdev/comp3/src/App.js"],"names":["React","isValidElement","Story","App","Component","constructor","props","state","error","isLoaded","stories","listings","events","offers","currentItemIdx","currentLayout","layouts","Array","prototype","next","current","prev","handleUpdate","bind","componentDidMount","fetchData","getData","response","fetch","data","json","urls","map","url","then","console","log","setState","update","e","handleStories","Object","keys","length","render","filteredStories","filter","elem","idx","story","title","description","mediaurl"],"mappings":"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","sourcesContent":["import React, { isValidElement } from 'react';\nimport './App.css';\nimport Story from './components/Story';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      stories: [],\n      listings: [],\n      events: [],\n      offers: [],\n      currentItemIdx: 1,\n      currentLayout: 1,\n      layouts: {\n        1 : 5,\n        2 : 5,\n        3 : 3,\n        4 : 2,\n      }\n    };\n    Array.prototype.next = function() {\n      return this[++this.current];\n    };\n    Array.prototype.prev = function() {\n        return this[--this.current];\n    };\n    Array.prototype.current = 0;\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n  \n  componentDidMount() {\n    // Function to fetch data from API\n    const fetchData = async (getData) => {\n      let response = await fetch(`https://sv-reqres.now.sh/api/${getData}/?per_page=15`);\n      let data = await response.json();\n      return data;\n    }\n    // Different urls to fetch\n    const urls = [ \"listings\"]\n    \n    // Map over them and load them to the state\n    urls.map((url) => {\n      fetchData(url).then( data => {\n        console.log(data.data);\n        this.setState((state) => ({\n          // append all the urls to stories so that all datas shows initially\n          stories: [...state.stories, ...data.data],\n          // put them in their own variables individually so we can swap between them\n          [url]: data.data\n        }))\n      })\n    })\n  }\n\n  handleUpdate(update, e){\n    this.setState(state => ({\n      stories: update\n    }));\n  }\n\n  handleStories(){\n    const { currentItemIdx, currentLayout, layouts } = this.state\n    \n    // go to the next layout\n    if (currentLayout === Object.keys(layouts).length){\n      this.setState({\n        currentLayout: 1\n      })\n    } else {\n      this.setState(state => ({\n        currentLayout: state.currentLayout\n      }));\n    }\n  }\n\n\n\n  render() {\n    const { stories, listings, events, offers } = this.state;\n    const { currentItemIdx, currentLayout, layouts} = this.state;\n\n    let filteredStories = stories.filter((elem, idx) => {\n      if( idx < 5 ) {\n        return true;\n      } else {\n        return false;\n      }\n    })\n    return(\n      <div className=\"wrapper\">\n        <div className=\"grid layout2\">\n          \n          { filteredStories.map((story, idx) => {\n            return <Story key={idx} title={story.title} story={story.description} url={story.mediaurl} idx={idx}/>\n          }) }\n        </div>\n        <nav>\n          <div className=\"controls\">\n            <a href=\"\" onClick=\"handleStories\">Prev.</a>\n            <a href=\"\" onClick=\"handleStories\">Next</a>\n          </div>\n        </nav>\n    </div>\n    )}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}